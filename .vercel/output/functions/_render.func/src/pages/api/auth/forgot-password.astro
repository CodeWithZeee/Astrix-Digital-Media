---
import { userService } from '../../../utils/database.js';
import { emailService } from '../../../utils/email.js';
import { v4 as uuidv4 } from 'uuid';

export async function POST({ request }) {
  try {
    const { email } = await request.json();

    if (!email) {
      return new Response(JSON.stringify({ 
        error: 'Email is required' 
      }), { 
        status: 400,
        headers: { 'Content-Type': 'application/json' }
      });
    }

    // Find user by email
    const user = await userService.findUserByEmail(email);
    if (!user) {
      // Don't reveal if user exists or not for security
      return new Response(JSON.stringify({
        success: true,
        message: 'If an account with this email exists, a password reset link has been sent.'
      }), {
        status: 200,
        headers: { 'Content-Type': 'application/json' }
      });
    }

    // Generate reset token
    const resetToken = uuidv4();
    const expiresAt = new Date(Date.now() + 60 * 60 * 1000); // 1 hour

    // Save reset token to database
    await userService.setResetToken(email, resetToken, expiresAt.toISOString());

    // Send password reset email
    const emailSent = await emailService.sendPasswordResetEmail(
      email, 
      user.name, 
      resetToken
    );

    if (!emailSent) {
      return new Response(JSON.stringify({ 
        error: 'Failed to send password reset email. Please try again later.' 
      }), { 
        status: 500,
        headers: { 'Content-Type': 'application/json' }
      });
    }

    return new Response(JSON.stringify({
      success: true,
      message: 'Password reset link has been sent to your email address.'
    }), {
      status: 200,
      headers: { 'Content-Type': 'application/json' }
    });

  } catch (error) {
    console.error('Forgot password error:', error);
    return new Response(JSON.stringify({ 
      error: 'Internal server error' 
    }), { 
      status: 500,
      headers: { 'Content-Type': 'application/json' }
    });
  }
}
---