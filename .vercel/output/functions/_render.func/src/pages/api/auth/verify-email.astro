---
import { userService } from '../../../utils/database.js';
import { emailService } from '../../../utils/email.js';

export async function POST({ request }) {
  try {
    const { token } = await request.json();

    if (!token) {
      return new Response(JSON.stringify({ 
        error: 'Verification token is required' 
      }), { 
        status: 400,
        headers: { 'Content-Type': 'application/json' }
      });
    }

    // Verify the email
    const verified = await userService.verifyEmail(token);
    
    if (!verified) {
      return new Response(JSON.stringify({ 
        error: 'Invalid or expired verification token' 
      }), { 
        status: 400,
        headers: { 'Content-Type': 'application/json' }
      });
    }

    // Get the user details before verification
    const user = await userService.findUserByVerificationToken(token);
    if (user) {
      // Send welcome email
      await emailService.sendWelcomeEmail(user.email, user.name);
    }

    return new Response(JSON.stringify({
      success: true,
      message: 'Email verified successfully! You can now log in to your account.'
    }), {
      status: 200,
      headers: { 'Content-Type': 'application/json' }
    });

  } catch (error) {
    console.error('Email verification error:', error);
    return new Response(JSON.stringify({ 
      error: 'Internal server error' 
    }), { 
      status: 500,
      headers: { 'Content-Type': 'application/json' }
    });
  }
}

export async function GET({ url }) {
  try {
    const token = url.searchParams.get('token');

    if (!token) {
      return new Response(JSON.stringify({ 
        error: 'Verification token is required' 
      }), { 
        status: 400,
        headers: { 'Content-Type': 'application/json' }
      });
    }

    // Get the user details before verification
    const user = await userService.findUserByVerificationToken(token);
    
    // Verify the email
    const verified = await userService.verifyEmail(token);
    
    if (!verified) {
      return new Response(JSON.stringify({ 
        error: 'Invalid or expired verification token' 
      }), { 
        status: 400,
        headers: { 'Content-Type': 'application/json' }
      });
    }

    // Send welcome email if user was found
    if (user) {
      await emailService.sendWelcomeEmail(user.email, user.name);
    }

    // Redirect to login page with success message
    return new Response(null, {
      status: 302,
      headers: { 
        'Location': '/login?verified=true'
      }
    });

  } catch (error) {
    console.error('Email verification error:', error);
    return new Response(JSON.stringify({ 
      error: 'Internal server error' 
    }), { 
      status: 500,
      headers: { 'Content-Type': 'application/json' }
    });
  }
}
---