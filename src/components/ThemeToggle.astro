---
---

<div class="theme-toggle-container">
  <button id="theme-toggle" class="theme-toggle-btn" aria-label="Toggle theme">
    <div class="toggle-track">
      <div class="toggle-thumb">
        <svg class="sun-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
        </svg>
        <svg class="moon-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
        </svg>
      </div>
    </div>
    <span class="toggle-label">
      <span class="light-label">Light</span>
      <span class="dark-label">Dark</span>
    </span>
  </button>
</div>

<style>
  .theme-toggle-container {
    position: fixed;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
    z-index: 1000;
  }

  .theme-toggle-btn {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50px;
    padding: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .theme-toggle-btn:hover {
    transform: scale(1.05);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.2);
  }

  .toggle-track {
    position: relative;
    width: 50px;
    height: 26px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 13px;
    transition: all 0.3s ease;
  }

  .toggle-thumb {
    position: absolute;
    top: 2px;
    left: 2px;
    width: 22px;
    height: 22px;
    background: white;
    border-radius: 50%;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  .sun-icon, .moon-icon {
    width: 14px;
    height: 14px;
    color: #667eea;
    transition: all 0.3s ease;
  }

  .moon-icon {
    opacity: 0;
    position: absolute;
  }

  .toggle-label {
    font-size: 10px;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.8);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .dark-label {
    display: none;
  }

  /* Dark theme styles */
  [data-theme="dark"] .toggle-track {
    background: linear-gradient(135deg, #0ea5e9 0%, #8b5cf6 100%);
  }

  [data-theme="dark"] .toggle-thumb {
    transform: translateX(24px);
    background: #1f2937;
  }

  [data-theme="dark"] .sun-icon {
    opacity: 0;
  }

  [data-theme="dark"] .moon-icon {
    opacity: 1;
    color: #0ea5e9;
  }

  [data-theme="dark"] .light-label {
    display: none;
  }

  [data-theme="dark"] .dark-label {
    display: inline;
  }

  /* Mobile adjustments */
  @media (max-width: 768px) {
    .theme-toggle-container {
      right: 10px;
      top: 100px;
    }
    
    .theme-toggle-btn {
      padding: 8px;
    }
    
    .toggle-track {
      width: 40px;
      height: 22px;
    }
    
    .toggle-thumb {
      width: 18px;
      height: 18px;
    }
    
    [data-theme="dark"] .toggle-thumb {
      transform: translateX(18px);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const themeToggle = document.getElementById('theme-toggle');
    const body = document.body;
    
    // Check for saved theme preference or default to 'light'
    const currentTheme = localStorage.getItem('theme') || 'light';
    body.setAttribute('data-theme', currentTheme);
    
    themeToggle?.addEventListener('click', function() {
      const currentTheme = body.getAttribute('data-theme');
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      
      body.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
      
      // Trigger custom event for theme change
      window.dispatchEvent(new CustomEvent('themeChanged', { detail: { theme: newTheme } }));
    });
  });
</script>